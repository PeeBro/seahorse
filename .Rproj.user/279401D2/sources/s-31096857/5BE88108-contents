---
title: "Descriptive Stats"
author: "Matej Stevuliak"
date: "10/28/2019"
output: html_document
---

```{r setup, include=FALSE}
library(Hmisc)

library(tools)
library(dplyr)
library(reshape2)
library(reshape)
library(ggplot2)
library(tidyr)      # Needed for tidy data functions like separate
library(tidyverse)
library(readxl)     # Read xlsx file
library(here)       # Used to set the path to the package dir. on the mashine 
library(knitr)      # Used for tables 
library(kableExtra)
library(corrplot)

# source the functions used in analysis
source(here('/R/src/analysis_source_functions.R'))



```


Here wehave a look at basic relations of Bioenergetics and explanatory variablas: Geneder, Age, Fasting, 

```{r}
comb <- read.csv("../PostAnalysisSeahorse/combinedOCR_ECAR_LOG.csv")
comb <- drop_na(comb)
comb$BHI <- (comb$Spare.Resp.Cpcty * comb$ATP.linked.Resp)/(comb$Non.Mito.Resp * comb$Proton.Leak)
comb$logBHI <- (comb$log.Spare.Resp.Cpcty + comb$log.ATP.linked.Resp)-(comb$log.Non.Mito.Resp + comb$log.Proton.Leak)
# add Bioenergetics OCR
bio <- melt(comb, id.vars = c("ID", "Project.x", "Code.x", "Disease.status", "Gender", "Fasting", "Blood.extraction.date", "Sample", "time", "Code.y", "Project.y", "Age"))
bio <- filter(bio, variable != "Other")
bio <- drop_na(bio)


bio$Type.energ <- ifelse(grepl("log", bio$variable ), "LOG", "NORM")
bio$OCR_ECAR   <- ifelse(bio$variable %in% c( "log.Basal.Resp", "log.ATP.linked.Resp", "log.Proton.Leak", "log.Spare.Resp.Cpcty", "log.Maximal.Resp", "log.Non.Mito.Resp",  "Basal.Resp", "ATP.linked.Resp", "Proton.Leak", "Spare.Resp.Cpcty", "Maximal.Resp", "Non.Mito.Resp"  ), "OCR", "ECAR" )
write_csv(comb, "../PostAnalysisSeahorse/commined_BE_All.csv")

```



```{r}
# Healty Sick compareason OCR norm
bio$comb <- paste0(substr(bio$Gender, 1,1),"/", substr(bio$Disease.status, 1,1))
ggplot(bio)+
  ggtitle("OCR bioenergetics Healthy/Sick patients")+
  geom_boxplot(aes(comb,value),outlier.size = -1, fill = "pink")+
  geom_jitter(aes(comb, value, col = Gender), size = 0.5, width = 0.25)+
  #facet_grid(. ~ variable, scales = "free")+
  facet_wrap(. ~ variable , scales = "free")+
  theme_bw()

```

Little variation between Healthy/Sick patients

Lets see nubers of pationts in different groups
```{r}
xtabs(~ Disease.status + Gender, data=comb)
xtabs(~ Disease.status + Gender + Fasting, data=comb)
xtabs(~ Disease.status + Gender + Project.x, data=comb)
```





```{r}
# Age variation with 
ggplot(bio)+
  ggtitle("BI relation to age and GENDER")+
  geom_point(aes(Age, value, col = Disease.status), size = 0.7)+
  geom_smooth(aes(Age, value), method = "lm")+
  facet_wrap(. ~ variable + Gender , scale = "free")+
  theme_bw()

# Age variation with 
ggplot(bio)+
  ggtitle("BI relation to age and Disease stat")+
  geom_point(aes(Age, value, col = Gender), size = 0.7)+
  geom_smooth(aes(Age, value), method = "lm")+
  facet_wrap(. ~ variable + Disease.status , scale = "free")+
  theme_bw()

```

Here it is not enough healthy males to draw any conclusions about gender and age effect on bioenergetics. 

First Look
corelation of estimates (intervals)
```{r}
estimates <- read.csv("../PostAnalysisSeahorse/estimates.csv")
estimates <- estimates %>% mutate(
  i1 = Int1-Int4,
  i2 = Int2-Int4,
  i3 = Int3-Int4,
)
cor(estimates[,2:8])
```


**Corelation of bioenergetics **
*Log scale BE*
```{r} 
# correlation between log energetics Circles from corrplot
library(corrplot)

res_log <- rcorr(as.matrix(comb[,c(10:15,22:25)]))

# ++++++++++++++++++++++++++++
# flattenCorrMatrix
# ++++++++++++++++++++++++++++
# cormat : matrix of the correlation coefficients
# pmat : matrix of the correlation p-values
flattenCorrMatrix <- function(cormat, pmat) {
  ut <- upper.tri(cormat)
  data.frame(
    row = rownames(cormat)[row(cormat)[ut]],
    column = rownames(cormat)[col(cormat)[ut]],
    cor  =(cormat)[ut],
    p = pmat[ut]
    )
}

kable(flattenCorrMatrix(res_log$r, res_log$P))

corrplot(res_log$r, p.mat = res_log$P, type = "upper", order = "hclust", 
         tl.col = "black", tl.srt = 45)

corrplot(res_log$r, method = "number", p.mat = res_log$P, type = "upper", order = "hclust", 
         tl.col = "black", tl.srt = 45)

corrplot.mixed(res_log$r, p.mat = res_log$P)


```

```{r}
library("PerformanceAnalytics")
chart.Correlation <- function (R, histogram = TRUE, method = c("pearson", "kendall", 
    "spearman"), ...) 
{
    x = checkData(R, method = "matrix")
    if (missing(method)) 
        method = method[1]
    panel.cor <- function(x, y, digits = 2, prefix = "", use = "pairwise.complete.obs", 
        method = "pearson", cex.cor, ...) {
        usr <- par("usr")
        on.exit(par(usr))
        par(usr = c(0, 1, 0, 1))
        r <- cor(x, y, use = use, method = method)
        txt <- format(c(r, 0.123456789), digits = digits)[1]
        txt <- paste(prefix, txt, sep = "")
        if (missing(cex.cor)) 
            cex <- 0.8/strwidth(txt)
        test <- cor.test(as.numeric(x), as.numeric(y), method = method)
        Signif <- symnum(test$p.value, corr = FALSE, na = FALSE, 
            cutpoints = c(0, 0.001, 0.01, 0.05, 0.1, 1), symbols = c("***", 
                "**", "*", ".", " "))
        text(0.5, 0.5, txt, cex = cex * (abs(r) + 0.3)/1.3)
        text(0.8, 0.8, Signif, cex = cex, col = 2)
    }
    f <- function(t) {
        dnorm(t, mean = mean(x), sd = sd.xts(x))
    }
    dotargs <- list(...)
    dotargs$method <- NULL
    rm(method)
    hist.panel = function(x, ... = NULL) {
        par(new = TRUE)
        hist(x, col = "light gray", probability = TRUE, axes = FALSE, 
            main = "", breaks = "FD")
        lines(density(x, na.rm = TRUE), col = "red", lwd = 1)
        rug(x)
    }
    if (histogram) 
        pairs(x, gap = 0, lower.panel = panel.smooth, upper.panel = panel.cor, 
            diag.panel = hist.panel, ...)
    else pairs(x, gap = 0, lower.panel = panel.smooth, upper.panel = panel.cor, ...)
}
 
# Correlation using Performance Analytics

#chart.Correlation(comb[,c(10:15,22:25)], histogram=TRUE, pch=".")
# scaled by SD centered by mean
chart.Correlation(scale(comb[,c(10:15,22:25)], center = TRUE, scale = TRUE), histogram=TRUE, pch=".", main="Correlation Log BE")  

```

*Natural scale bioenergetics*
```{r}
#chart.Correlation(comb[,c(16:21,26:29)], histogram=TRUE, pch=".")
# scaled by SD centered by mean
chart.Correlation(scale(comb[,c(16:21,26:29)], center = TRUE, scale = TRUE), histogram=TRUE, pch=".", main="Correlation normal BE")

```


Looking at PCA

```{r}

# take whole data from pipeline result 

bioe.PCA <- prcomp(comb[,c(10:15,22:25)], center = T, scale. = T) # LOG Bio Energetics
summary(bioe.PCA)

require(graphics)
biplot(bioe.PCA, pc.biplot = F )

# PCA
x <- data.frame(bioe.PCA$x[,c(1,2,3,4,5)])
bioe_plus_PCA <- cbind(comb, x)
#write_csv(bioe_plus_PCA, "../Data/OUTPUT/logBEplusPCA.csv")

# join the data 
# bioe_plus_PCA <- cbind(bioenergetics, x) full data

library(ggfortify)

autoplot(prcomp(comb[,c(10:15,22:25)]), 
         data = comb, 
         x = 1, y = 2,
         shape = "Gender",
         loadings = TRUE, 
         loadings.colour = 'blue',
         colour = "Disease.status",
         #colour = "Gender",
         #colour = "Age",
         loadings.label = TRUE, 
         loadings.label.size = 3,
         label.size = 2)+
  ggtitle("PCA of ratio Bioenergetics")+
  theme_bw()




```

Cant see much diverse groups in here


Natural scale Bioenergetics

```{r}
autoplot(prcomp(comb[,c(16:21,26:29)]), 
         data = comb, 
         x = 1, y = 2,
         shape = "Gender",
         loadings = TRUE, 
         loadings.colour = 'blue',
         colour = "Disease.status",
         #colour = "Gender",
         #colour = "Age",
         loadings.label = TRUE, 
         loadings.label.size = 3,
         label.size = 2)+
  ggtitle("PCA of Distance Bioenergetics")+
  theme_bw()
```

Here we can see lot of varience that isnt explaned by any Bioenergetics. 


```{r}

# take whole data from pipeline result 

#bioe.PCA <- prcomp(bioenergetics[,2:6], center = T, scale. = T) full data

bioe.PCA <- prcomp(comb[,c(16:21,26:29)], center = T, scale. = T) # LOG Bio Energetics
summary(bioe.PCA)

require(graphics)
biplot(bioe.PCA, scale = TRUE, pc.biplot = T)

# PCA
x <- data.frame(bioe.PCA$x[,c(1,2,3,4,5)])
bioe_plus_PCA <- cbind(comb, x)
#write_csv(bioe_plus_PCA, "../Data/OUTPUT/logBEplusPCA.csv")

# join the data 
# bioe_plus_PCA <- cbind(bioenergetics, x) full data



ggplot(bioe_plus_PCA)+
  ggtitle("Samples PC1 and PC2")+
  geom_point(aes(PC1, PC2, col = Disease.status))+
  geom_segment(x)
  geom_hline(aes(yintercept = 0), col= "red")+
  geom_vline(aes(xintercept = 0), col= "red")+
  theme_bw()

ggplot(bioe_plus_PCA)+
  ggtitle("Samples PC1 and PC2")+
  geom_point(aes(PC1, PC2, col = Gender))+
  geom_hline(aes(yintercept = 0), col= "red")+
  geom_vline(aes(xintercept = 0), col= "red")+
  theme_bw()

ggplot(bioe_plus_PCA)+
  ggtitle("Samples PC1 and PC2")+
  geom_point(aes(PC2, PC3, col = Project.x))+
  geom_hline(aes(yintercept = 0), col= "red")+
  geom_vline(aes(xintercept = 0), col= "red")+
  theme_bw()


```


*t-SNE t-Distributed Stochastic Neighbor Embedding *
```{r}
library(Rtsne)

## calling the installed package
train <- comb[,c(1,10:15,22:25)] ## Choose the train.csv file downloaded from the link above  

## Curating the database for analysis with both t-SNE and PCA
Labels<-train$ID

## for plotting
colors = rainbow(length(unique(comb$Disease.status)))
names(colors) = unique(comb$Disease.status)

## Executing the algorithm on curated data
tsne <- Rtsne(train, dims = 2, perplexity=30, verbose=TRUE, max_iter = 500)
exeTimeTsne<- system.time(Rtsne(train[,-1], dims = 2, perplexity=30, verbose=TRUE, max_iter = 500))

## Plotting

plot(tsne$Y,t='n', main="tsne")
text(tsne$Y,labels="o", col=colors[comb$Disease.status])

ggplot()+
  geom_point(aes(x=tsne$Y[,1], y=tsne$Y[,2], color = Disease.status))

```



```{r}

# Healty Sick compareason OCR norm
ggplot(bio)+
  ggtitle("OCR bioenergetics Healthy/Sick patients")+
  geom_boxplot(aes(Disease.status, value),outlier.size = -1, fill = "pink")+
  geom_jitter(aes(Disease.status, value, col = Gender), size = 0.5, width = 0.25)+
  #facet_grid(. ~ variable, scales = "free")+
  facet_wrap(. ~ variable , scales = "free")+
  theme_bw()

```

Little variation between Healthy/Sick patients

```{r}
# Age variation with 
ggplot(bio)+
  geom_point(aes(Age, value, col = Disease.status), size = 0.7)+
  geom_smooth(aes(Age, value), method = "lm")+
  facet_wrap(. ~ variable + Gender , scale = "free")+
  theme_bw()

# Age variation with 
ggplot(bio)+
  geom_point(aes(Age, value, col = Gender), size = 0.7)+
  geom_smooth(aes(Age, value), method = "lm")+
  facet_wrap(. ~ variable + Disease.status , scale = "free")+
  theme_bw()

```

MASHINE LEARNING
TRY
Glm                - removing BI by variation inflacion factor
K means klustering - get BI values of healthy cluster ? then try to predict
Neural Network     - dump 


