if(!dir.exists(o_path)){
dir.create(path = o_path)
}
# source the functions used in analysis
source(here("R", "src", "analysis_source_functions.R"))
# INPUT_PATH  <- (here('/Data/INPUT/ConBIS')) # path to the folder of interest
INPUT_PATH  <- (here('Data', "INPUT", input_folder)) # path to the folder of interest
# OUTPUT_PATH <- (here('/Data/OUTPUT/HF'))
OUTPUT_PATH <- (here('Data', "OUTPUT", output_folder))
# Delete old knit files
knit_cache <- here('Experiments', "OCR+ECAR-Pipeline_cache")
knit_files <- here("Data", "OUTPUT", output_folder, "OCR+ECAR-Pipeline_files")
knit_folders <- c(knit_cache, knit_files)
for (folder in knit_folders) {
if (file.exists(folder))
unlink(folder, recursive = T)
}
# Make Sure You have all following packages, If not uncomment and run next line:
#source(here('/R/src/config_file.R'))
here::i_am("Experiments/OCR+ECAR-Pipeline.Rmd")
library(tools)
library(reshape2)
library(reshape)
library(tidyverse)
library(readxl)     # Read xlsx file
library(here)       # Used to set the path to the package dir. on the mashine
library(knitr)      # Used for tables
library(kableExtra)
library(shiny)
rmarkdown::render("./Experiments/OCR+ECAR-Pipeline.Rmd", params = "ask")
# Get input folder
input_folder <- params$input_folder
# Create output folder
output_folder <- sprintf("%s_OUTPUT", input_folder)
o_path <- sprintf("./Data/OUTPUT/%s", output_folder)
if(!dir.exists(o_path)){
dir.create(path = o_path)
}
# source the functions used in analysis
source(here("R", "src", "analysis_source_functions.R"))
# INPUT_PATH  <- (here('/Data/INPUT/ConBIS')) # path to the folder of interest
INPUT_PATH  <- (here('Data', "INPUT", input_folder)) # path to the folder of interest
# OUTPUT_PATH <- (here('/Data/OUTPUT/HF'))
OUTPUT_PATH <- (here('Data', "OUTPUT", output_folder))
# Delete old knit files
knit_cache <- here('Experiments', "OCR+ECAR-Pipeline_cache")
knit_files <- here("Data", "OUTPUT", output_folder, "OCR+ECAR-Pipeline_files")
knit_folders <- c(knit_cache, knit_files)
for (folder in knit_folders) {
if (file.exists(folder))
unlink(folder, recursive = T)
}
# Make Sure You have all following packages, If not uncomment and run next line:
#source(here('/R/src/config_file.R'))
here::i_am("Experiments/OCR+ECAR-Pipeline.Rmd")
library(tools)
library(reshape2)
library(reshape)
library(tidyverse)
library(readxl)     # Read xlsx file
library(here)       # Used to set the path to the package dir. on the mashine
library(knitr)      # Used for tables
library(kableExtra)
library(shiny)
rmarkdown::render("./Experiments/OCR+ECAR-Pipeline.Rmd", params = "ask")
# Get input folder
input_folder <- params$input_folder
# Create output folder
output_folder <- sprintf("%s_OUTPUT", input_folder)
o_path <- sprintf("./Data/OUTPUT/%s", output_folder)
if(!dir.exists(o_path)){
dir.create(path = o_path)
}
# source the functions used in analysis
source(here("R", "src", "analysis_source_functions.R"))
# INPUT_PATH  <- (here('/Data/INPUT/ConBIS')) # path to the folder of interest
INPUT_PATH  <- (here('Data', "INPUT", input_folder)) # path to the folder of interest
# OUTPUT_PATH <- (here('/Data/OUTPUT/HF'))
OUTPUT_PATH <- (here('Data', "OUTPUT", output_folder))
# Delete old knit files
knit_cache <- here('Experiments', "OCR+ECAR-Pipeline_cache")
knit_files <- here("Data", "OUTPUT", output_folder, "OCR+ECAR-Pipeline_files")
knit_folders <- c(knit_cache, knit_files)
for (folder in knit_folders) {
if (file.exists(folder))
unlink(folder, recursive = T)
}
# Make Sure You have all following packages, If not uncomment and run next line:
#source(here('/R/src/config_file.R'))
here::i_am("Experiments/OCR+ECAR-Pipeline.Rmd")
library(tools)
library(reshape2)
library(reshape)
library(tidyverse)
library(readxl)     # Read xlsx file
library(here)       # Used to set the path to the package dir. on the mashine
library(knitr)      # Used for tables
library(kableExtra)
library(shiny)
rmarkdown::render("./Experiments/OCR+ECAR-Pipeline.Rmd", params = "ask")
# Get input folder
input_folder <- params$input_folder
# Create output folder
output_folder <- sprintf("%s_OUTPUT", input_folder)
o_path <- sprintf("./Data/OUTPUT/%s", output_folder)
if(!dir.exists(o_path)){
dir.create(path = o_path)
}
# source the functions used in analysis
source(here("R", "src", "analysis_source_functions.R"))
# INPUT_PATH  <- (here('/Data/INPUT/ConBIS')) # path to the folder of interest
INPUT_PATH  <- (here('Data', "INPUT", input_folder)) # path to the folder of interest
# OUTPUT_PATH <- (here('/Data/OUTPUT/HF'))
OUTPUT_PATH <- (here('Data', "OUTPUT", output_folder))
# Delete old knit files
knit_cache <- here('Experiments', "OCR+ECAR-Pipeline_cache")
knit_files <- here("Data", "OUTPUT", output_folder, "OCR+ECAR-Pipeline_files")
knit_folders <- c(knit_cache, knit_files)
for (folder in knit_folders) {
if (file.exists(folder))
unlink(folder, recursive = T)
}
# HOW TO USE
# Step 1: Make a new folder in the Data/INPUT folder and place your excel files there
# Step 2: Write the name of the folder above. Use quotes like this "My_folder"
# Step 3: Run the code chunk below
here::i_am("Experiments/OCR+ECAR-Pipeline.Rmd")
library(tools)
library(reshape2)
library(reshape)
library(tidyverse)
library(readxl)     # Read xlsx file
library(here)       # Used to set the path to the package dir. on the mashine
library(knitr)      # Used for tables
library(kableExtra)
library(shiny)
rmarkdown::render("./Experiments/OCR+ECAR-Pipeline.Rmd", params = "ask")
# HOW TO USE
# Step 1: Make a new folder in the Data/INPUT folder and place your excel files there
# Step 2: Write the name of the folder above. Use quotes like this "My_folder"
# Step 3: Run the code chunk below
here::i_am("Experiments/OCR+ECAR-Pipeline.Rmd")
library(tools)
library(reshape2)
library(reshape)
library(tidyverse)
library(readxl)     # Read xlsx file
library(here)       # Used to set the path to the package dir. on the mashine
library(knitr)      # Used for tables
library(kableExtra)
library(shiny)
rmarkdown::render("./Experiments/OCR+ECAR-Pipeline.Rmd", params = "ask")
# HOW TO USE
# Step 1: Make a new folder in the Data/INPUT folder and place your excel files there
# Step 2: Write the name of the folder above. Use quotes like this "My_folder"
# Step 3: Run the code chunk below
here::i_am("Experiments/OCR+ECAR-Pipeline.Rmd")
library(tools)
library(reshape2)
library(reshape)
library(tidyverse)
library(readxl)     # Read xlsx file
library(here)       # Used to set the path to the package dir. on the mashine
library(knitr)      # Used for tables
library(kableExtra)
library(shiny)
# source the functions used in analysis
source(here("R", "src", "analysis_source_functions.R"))
rmarkdown::render("./Experiments/OCR+ECAR-Pipeline.Rmd", params = "ask")
# Make Sure You have all following packages, If not uncomment and run next line:
#source(here('/R/src/config_file.R'))
# Get input folder
input_folder <- params$input_folder
# Create output folder
output_folder <- sprintf("%s_OUTPUT", input_folder)
o_path <- sprintf("./Data/OUTPUT/%s", output_folder)
if(!dir.exists(o_path)){
dir.create(path = o_path)
}
# INPUT_PATH  <- (here('/Data/INPUT/ConBIS')) # path to the folder of interest
INPUT_PATH  <- (here('Data', "INPUT", input_folder)) # path to the folder of interest
# OUTPUT_PATH <- (here('/Data/OUTPUT/HF'))
OUTPUT_PATH <- (here('Data', "OUTPUT", output_folder))
# Delete old knit files
knit_cache <- here('Experiments', "OCR+ECAR-Pipeline_cache")
knit_files <- here("Data", "OUTPUT", output_folder, "OCR+ECAR-Pipeline_files")
knit_folders <- c(knit_cache, knit_files)
for (folder in knit_folders) {
if (file.exists(folder))
unlink(folder, recursive = T)
}
# HOW TO USE
# Step 1: Make a new folder in the Data/INPUT folder and place your excel files there
# Step 2: Write the name of the folder above. Use quotes like this "My_folder"
# Step 3: Run the code chunk below
here::i_am("Experiments/OCR+ECAR-Pipeline.Rmd")
library(tools)
library(reshape2)
library(reshape)
library(tidyverse)
library(readxl)     # Read xlsx file
library(here)       # Used to set the path to the package dir. on the mashine
library(knitr)      # Used for tables
library(kableExtra)
library(shiny)
# source the functions used in analysis
source(here("R", "src", "analysis_source_functions.R"))
rmarkdown::render("./Experiments/OCR+ECAR-Pipeline.Rmd", params = "ask")
# HOW TO USE
# Step 1: Make a new folder in the Data/INPUT folder and place your excel files there
# Step 2: Write the name of the folder above. Use quotes like this "My_folder"
# Step 3: Run the code chunk below
here::i_am("Experiments/OCR+ECAR-Pipeline.Rmd")
library(tools)
library(reshape2)
library(reshape)
library(tidyverse)
library(readxl)     # Read xlsx file
library(here)       # Used to set the path to the package dir. on the mashine
library(knitr)      # Used for tables
library(kableExtra)
library(shiny)
# source the functions used in analysis
source(here("R", "src", "analysis_source_functions.R"))
rmarkdown::render("./Experiments/OCR+ECAR-Pipeline.Rmd", params = "ask")
# HOW TO USE
# Step 1: Make a new folder in the Data/INPUT folder and place your excel files there
# Step 2: Write the name of the folder above. Use quotes like this "My_folder"
# Step 3: Run the code chunk below
here::i_am("Experiments/OCR+ECAR-Pipeline.Rmd")
library(tools)
library(reshape2)
library(reshape)
library(tidyverse)
library(readxl)     # Read xlsx file
library(here)       # Used to set the path to the package dir. on the mashine
library(knitr)      # Used for tables
library(kableExtra)
library(shiny)
# source the functions used in analysis
source(here("R", "src", "analysis_source_functions.R"))
rmarkdown::render("./Experiments/OCR+ECAR-Pipeline.Rmd", params = "ask")
# HOW TO USE
# Step 1: Make a new folder in the Data/INPUT folder and place your excel files there
# Step 2: Write the name of the folder above. Use quotes like this "My_folder"
# Step 3: Run the code chunk below
here::i_am("Experiments/OCR+ECAR-Pipeline.Rmd")
library(tools)
library(reshape2)
library(reshape)
library(tidyverse)
library(readxl)     # Read xlsx file
library(here)       # Used to set the path to the package dir. on the mashine
library(knitr)      # Used for tables
library(kableExtra)
library(shiny)
# source the functions used in analysis
source(here("R", "src", "analysis_source_functions.R"))
rmarkdown::render("./Experiments/OCR+ECAR-Pipeline.Rmd", params = "ask")
# Make Sure You have all following packages, If not uncomment and run next line:
#source(here('/R/src/config_file.R'))
# Get input folder
input_folder <- params$input_folder
# Create output folder
output_folder <- sprintf("%s_OUTPUT", input_folder)
o_path <- sprintf("./Data/OUTPUT/%s", output_folder)
dir.create(path = o_path)
# if(!dir.exists(o_path)){
#   dir.create(path = o_path)
# }
# INPUT_PATH  <- (here('/Data/INPUT/ConBIS')) # path to the folder of interest
INPUT_PATH  <- (here('Data', "INPUT", input_folder)) # path to the folder of interest
# OUTPUT_PATH <- (here('/Data/OUTPUT/HF'))
OUTPUT_PATH <- (here('Data', "OUTPUT", output_folder))
# Delete old knit files
knit_cache <- here('Experiments', "OCR+ECAR-Pipeline_cache")
knit_files <- here("Data", "OUTPUT", output_folder, "OCR+ECAR-Pipeline_files")
knit_folders <- c(knit_cache, knit_files)
for (folder in knit_folders) {
if (file.exists(folder))
unlink(folder, recursive = T)
}
# HOW TO USE
# Step 1: Make a new folder in the Data/INPUT folder and place your excel files there
# Step 2: Write the name of the folder above. Use quotes like this "My_folder"
# Step 3: Run the code chunk below
here::i_am("Experiments/OCR+ECAR-Pipeline.Rmd")
library(tools)
library(reshape2)
library(reshape)
library(tidyverse)
library(readxl)     # Read xlsx file
library(here)       # Used to set the path to the package dir. on the mashine
library(knitr)      # Used for tables
library(kableExtra)
library(shiny)
# source the functions used in analysis
source(here("R", "src", "analysis_source_functions.R"))
rmarkdown::render("./Experiments/OCR+ECAR-Pipeline.Rmd", output_dir = "out", params = "ask")
# HOW TO USE
# Step 1: Make a new folder in the Data/INPUT folder and place your excel files there
# Step 2: Write the name of the folder above. Use quotes like this "My_folder"
# Step 3: Run the code chunk below
here::i_am("Experiments/OCR+ECAR-Pipeline.Rmd")
library(tools)
library(reshape2)
library(reshape)
library(tidyverse)
library(readxl)     # Read xlsx file
library(here)       # Used to set the path to the package dir. on the mashine
library(knitr)      # Used for tables
library(kableExtra)
library(shiny)
# source the functions used in analysis
source(here("R", "src", "analysis_source_functions.R"))
OUTPUT_PATH <- here()
rmarkdown::render("./Experiments/OCR+ECAR-Pipeline.Rmd", output_dir = OUTPUT_PATH, params = "ask")
# HOW TO USE
# Step 1: Make a new folder in the Data/INPUT folder and place your excel files there
# Step 2: Write the name of the folder above. Use quotes like this "My_folder"
# Step 3: Run the code chunk below
here::i_am("Experiments/OCR+ECAR-Pipeline.Rmd")
library(tools)
library(reshape2)
library(reshape)
library(tidyverse)
library(readxl)     # Read xlsx file
library(here)       # Used to set the path to the package dir. on the mashine
library(knitr)      # Used for tables
library(kableExtra)
library(shiny)
# source the functions used in analysis
source(here("R", "src", "analysis_source_functions.R"))
OUTPUT_PATH <- here()
rmarkdown::render("./Experiments/OCR+ECAR-Pipeline.Rmd", output_dir = here("Data", "OUTPUT", params$input_folder), params = "ask")
?render
# HOW TO USE
# Step 1: Make a new folder in the Data/INPUT folder and place your excel files there
# Step 2: Write the name of the folder above. Use quotes like this "My_folder"
# Step 3: Run the code chunk below
here::i_am("Experiments/OCR+ECAR-Pipeline.Rmd")
library(tools)
library(reshape2)
library(reshape)
library(tidyverse)
library(readxl)     # Read xlsx file
library(here)       # Used to set the path to the package dir. on the mashine
library(knitr)      # Used for tables
library(kableExtra)
library(shiny)
# source the functions used in analysis
source(here("R", "src", "analysis_source_functions.R"))
OUTPUT_PATH <- here()
rmarkdown::render("./Experiments/OCR+ECAR-Pipeline.Rmd", params = "ask")
here::i_am("Experiments/OCR+ECAR-Pipeline.Rmd")
library(tools)
library(reshape2)
library(reshape)
library(tidyverse)
library(readxl)     # Read xlsx file
library(here)       # Used to set the path to the package dir. on the mashine
library(knitr)      # Used for tables
library(kableExtra)
library(shiny)
# source the functions used in analysis
source(here("R", "src", "analysis_source_functions.R"))
# Make Sure You have all following packages, If not uncomment and run next line:
#source(here('/R/src/config_file.R'))
# Get input folder
input_folder <- params$input_folder
# Create output folder
output_folder <- sprintf("%s_OUTPUT", input_folder)
o_path <- sprintf("./Data/OUTPUT/%s", output_folder)
if(!dir.exists(o_path)){
dir.create(path = o_path)
}
# INPUT_PATH  <- (here('/Data/INPUT/ConBIS')) # path to the folder of interest
INPUT_PATH  <- (here('Data', "INPUT", input_folder)) # path to the folder of interest
# OUTPUT_PATH <- (here('/Data/OUTPUT/HF'))
OUTPUT_PATH <- (here('Data', "OUTPUT", output_folder))
# Delete old knit files
knit_cache <- here('Experiments', "OCR+ECAR-Pipeline_cache")
knit_files <- here("Data", "OUTPUT", output_folder, "OCR+ECAR-Pipeline_files")
knit_folders <- c(knit_cache, knit_files)
for (folder in knit_folders) {
if (file.exists(folder))
unlink(folder, recursive = T)
}
# Read The the separate xlsx files from folder, Specify entire path to folder.
data <- read_xlsx_set(INPUT_PATH, ".xlsx")
dm <- data$rates
# HOW TO USE
# Step 1: Make a new folder in the Data/INPUT folder and place your excel files there
# Step 2: Write the name of the folder above. Use quotes like this "My_folder"
# Step 3: Run the code chunk below
here::i_am("Experiments/OCR+ECAR-Pipeline.Rmd")
library(tools)
library(reshape2)
library(reshape)
library(tidyverse)
library(readxl)     # Read xlsx file
library(here)       # Used to set the path to the package dir. on the mashine
library(knitr)      # Used for tables
library(kableExtra)
library(shiny)
# source the functions used in analysis
source(here("R", "src", "analysis_source_functions.R"))
rmarkdown::render("./Experiments/OCR+ECAR-Pipeline.Rmd", params = "ask")
# HOW TO USE
# Step 1: Make a new folder in the Data/INPUT folder and place your excel files there
# Step 2: Write the name of the folder above. Use quotes like this "My_folder"
# Step 3: Run the code chunk below
here::i_am("Experiments/OCR+ECAR-Pipeline.Rmd")
library(tools)
library(reshape2)
library(reshape)
library(tidyverse)
library(readxl)     # Read xlsx file
library(here)       # Used to set the path to the package dir. on the mashine
library(knitr)      # Used for tables
library(kableExtra)
library(shiny)
# source the functions used in analysis
source(here("R", "src", "analysis_source_functions.R"))
rmarkdown::render("./Experiments/OCR+ECAR-Pipeline.Rmd", params = "ask")
# HOW TO USE
# Step 1: Make a new folder in the Data/INPUT folder and place your excel files there
# Step 2: Write the name of the folder above. Use quotes like this "My_folder"
# Step 3: Run the code chunk below
here::i_am("Experiments/OCR+ECAR-Pipeline.Rmd")
library(tools)
library(reshape2)
library(reshape)
library(tidyverse)
library(readxl)     # Read xlsx file
library(here)       # Used to set the path to the package dir. on the mashine
library(knitr)      # Used for tables
library(kableExtra)
library(shiny)
# source the functions used in analysis
source(here("R", "src", "analysis_source_functions.R"))
rmarkdown::render("./Experiments/OCR+ECAR-Pipeline.Rmd", params = "ask", output_dir = params$input_folder)
# Make Sure You have all following packages, If not uncomment and run next line:
#source(here('/R/src/config_file.R'))
here::i_am("Experiments/OCR+ECAR-Pipeline.Rmd")
library(tools)
library(reshape2)
library(reshape)
library(tidyverse)
library(readxl)     # Read xlsx file
library(here)       # Used to set the path to the package dir. on the mashine
library(knitr)      # Used for tables
library(kableExtra)
library(shiny)
# Get input folder
input_folder <- params$input_folder
# Create output folder
output_folder <- sprintf("%s_OUTPUT", input_folder)
o_path <- sprintf("./Data/OUTPUT/%s", output_folder)
if(!dir.exists(o_path)){
dir.create(path = o_path)
}
# source the functions used in analysis
source(here("R", "src", "analysis_source_functions.R"))
# INPUT_PATH  <- (here('/Data/INPUT/ConBIS')) # path to the folder of interest
INPUT_PATH  <- (here('Data', "INPUT", input_folder)) # path to the folder of interest
# OUTPUT_PATH <- (here('/Data/OUTPUT/HF'))
OUTPUT_PATH <- (here('Data', "OUTPUT", output_folder))
# Delete old knit files
knit_cache <- here('Experiments', "OCR+ECAR-Pipeline_cache")
knit_files <- here("Data", "OUTPUT", output_folder, "OCR+ECAR-Pipeline_files")
knit_folders <- c(knit_cache, knit_files)
for (folder in knit_folders) {
if (file.exists(folder))
unlink(folder, recursive = T)
}
rmarkdown::render("./Experiments/OCR+ECAR-Pipeline.Rmd", output_dir = OUTPUT_PATH)
# Make Sure You have all following packages, If not uncomment and run next line:
#source(here('/R/src/config_file.R'))
here::i_am("Experiments/OCR+ECAR-Pipeline.Rmd")
library(tools)
library(reshape2)
library(reshape)
library(tidyverse)
library(readxl)     # Read xlsx file
library(here)       # Used to set the path to the package dir. on the mashine
library(knitr)      # Used for tables
library(kableExtra)
library(shiny)
# Get input folder
input_folder <- params$input_folder
# Create output folder
output_folder <- sprintf("%s_OUTPUT", input_folder)
o_path <- sprintf("./Data/OUTPUT/%s", output_folder)
if(!dir.exists(o_path)){
dir.create(path = o_path)
}
# source the functions used in analysis
source(here("R", "src", "analysis_source_functions.R"))
# INPUT_PATH  <- (here('/Data/INPUT/ConBIS')) # path to the folder of interest
INPUT_PATH  <- (here('Data', "INPUT", input_folder)) # path to the folder of interest
# OUTPUT_PATH <- (here('/Data/OUTPUT/HF'))
OUTPUT_PATH <- (here('Data', "OUTPUT", output_folder))
# Delete old knit files
knit_cache <- here('Experiments', "OCR+ECAR-Pipeline_cache")
knit_files <- here("Data", "OUTPUT", output_folder, "OCR+ECAR-Pipeline_files")
knit_folders <- c(knit_cache, knit_files)
for (folder in knit_folders) {
if (file.exists(folder))
unlink(folder, recursive = T)
}
rmarkdown::render("./Experiments/OCR+ECAR-Pipeline.Rmd", output_dir = OUTPUT_PATH)
