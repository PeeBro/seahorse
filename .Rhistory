# Delete old knit files
knit_cache <- here('Experiments', "OCR+ECAR-Pipeline_cache")
knit_files <- here("Data", "OUTPUT", output_folder, "OCR+ECAR-Pipeline_files")
knit_folders <- c(knit_cache, knit_files)
for (folder in knit_folders) {
if (file.exists(folder))
unlink(folder, recursive = T)
}
rmarkdown::render("./Experiments/OCR+ECAR-Pipeline.Rmd", output_dir = OUTPUT_PATH)
# Check if all packages are installed and loaded
source(here('/R/src/config_file.R'))
here::i_am("Experiments/OCR+ECAR-Pipeline.Rmd")
library(tools)
library(reshape2)
library(reshape)
library(tidyverse)
library(readxl)     # Read xlsx file
library(here)       # Used to set the path to the package dir. on the mashine
library(knitr)      # Used for tables
library(kableExtra)
library(shiny)
# Get input folder
input_folder <- params$input_folder
# Create output folder
output_folder <- sprintf("%s_OUTPUT", input_folder)
o_path <- sprintf("./Data/OUTPUT/%s", output_folder)
if(!dir.exists(o_path)){
dir.create(path = o_path)
}
# source the functions used in analysis
source(here("R", "src", "analysis_source_functions.R"))
# INPUT_PATH  <- (here('/Data/INPUT/ConBIS')) # path to the folder of interest
INPUT_PATH  <- (here('Data', "INPUT", input_folder)) # path to the folder of interest
# OUTPUT_PATH <- (here('/Data/OUTPUT/HF'))
OUTPUT_PATH <- (here('Data', "OUTPUT", output_folder))
# Delete old knit files
knit_cache <- here('Experiments', "OCR+ECAR-Pipeline_cache")
knit_files <- here("Data", "OUTPUT", output_folder, "OCR+ECAR-Pipeline_files")
knit_folders <- c(knit_cache, knit_files)
for (folder in knit_folders) {
if (file.exists(folder))
unlink(folder, recursive = T)
}
rmarkdown::render("./Experiments/OCR+ECAR-Pipeline.Rmd", output_dir = OUTPUT_PATH)
# Check if all packages are installed and loaded
source('./R/src/config_file.R')
# Check if all packages are installed and install the missing ones
source('./R/src/config_file.R')
# Load packages
library(tools)
library(reshape2)
library(reshape)
library(tidyverse)
library(readxl)     # Read xlsx file
library(here)       # Used to set the path to the package dir. on the mashine
library(knitr)      # Used for tables
library(kableExtra)
library(shiny)
# Get input folder from parameters
input_folder <- params$input_folder
# Create new output folder
output_folder <- sprintf("%s_OUTPUT", input_folder)
o_path <- sprintf("./Data/OUTPUT/%s", output_folder)
if(!dir.exists(o_path)){
dir.create(path = o_path)
}
# source the functions used in analysis
here::i_am("Experiments/OCR+ECAR-Pipeline.Rmd")
source("./R/src/analysis_source_functions.R")
# INPUT_PATH  <- (here('/Data/INPUT/ConBIS')) # path to the folder of interest
INPUT_PATH  <- (sprintf("./Data/INPUT/%s", input_folder)) # path to the folder of interest
# OUTPUT_PATH <- (here('/Data/OUTPUT/HF'))
# OUTPUT_PATH <- (here('Data', "OUTPUT", output_folder))
OUTPUT_PATH  <- (sprintf("./Data/OUTPUT/%s", output_folder)) # path to the folder of interest
# Delete old knit files
knit_cache <- './Experiments/OCR+ECAR-Pipeline_cache'
knit_files <- sprintf("Data/OUTPUT/%s/OCR+ECAR-Pipeline_files",output_folder)
knit_folders <- c(knit_cache, knit_files)
for (folder in knit_folders) {
if (file.exists(folder))
unlink(folder, recursive = T)
}
rmarkdown::render("./Experiments/OCR+ECAR-Pipeline.Rmd", output_dir = OUTPUT_PATH)
# Check if all packages are installed and install the missing ones
source('./R/src/config_file.R')
# Load packages
library(tools)
library(reshape2)
library(reshape)
library(tidyverse)
library(readxl)     # Read xlsx file
library(here)       # Used to set the path to the package dir. on the mashine
library(knitr)      # Used for tables
library(kableExtra)
library(shiny)
# Get input folder from parameters
input_folder <- params$input_folder
# Create new output folder
output_folder <- sprintf("%s_OUTPUT", input_folder)
o_path <- sprintf("./Data/OUTPUT/%s", output_folder)
if(!dir.exists(o_path)){
dir.create(path = o_path)
}
# source the functions used in analysis
here::i_am("Experiments/OCR+ECAR-Pipeline.Rmd")
source("./R/src/analysis_source_functions.R")
# INPUT_PATH  <- (here('/Data/INPUT/ConBIS')) # path to the folder of interest
INPUT_PATH  <- (sprintf("./Data/INPUT/%s", input_folder)) # path to the folder of interest
# OUTPUT_PATH <- (here('/Data/OUTPUT/HF'))
# OUTPUT_PATH <- (here('Data', "OUTPUT", output_folder))
OUTPUT_PATH  <- (sprintf("./Data/OUTPUT/%s", output_folder)) # path to the folder of interest
# Delete old knit files
knit_cache <- './Experiments/OCR+ECAR-Pipeline_cache'
knit_files <- sprintf("Data/OUTPUT/%s/OCR+ECAR-Pipeline_files",output_folder)
knit_folders <- c(knit_cache, knit_files)
for (folder in knit_folders) {
if (file.exists(folder))
unlink(folder, recursive = T)
}
rmarkdown::render("./Experiments/OCR+ECAR-Pipeline.Rmd", output_dir = OUTPUT_PATH)
# Check if all packages are installed and install the missing ones
source('./R/src/config_file.R')
# Load packages
library(tools)
library(reshape2)
library(reshape)
library(tidyverse)
library(readxl)     # Read xlsx file
library(here)       # Used to set the path to the package dir. on the mashine
library(knitr)      # Used for tables
library(kableExtra)
library(shiny)
# Get input folder from parameters
input_folder <- params$input_folder
input_folder <- "test"
# Create new output folder
output_folder <- sprintf("%s_OUTPUT", input_folder)
o_path <- sprintf("./Data/OUTPUT/%s", output_folder)
if(!dir.exists(o_path)){
dir.create(path = o_path)
}
# INPUT_PATH  <- (here('/Data/INPUT/ConBIS')) # path to the folder of interest
INPUT_PATH  <- (sprintf("./Data/INPUT/%s", input_folder)) # path to the folder of interest
# OUTPUT_PATH <- (here('/Data/OUTPUT/HF'))
# OUTPUT_PATH <- (here('Data', "OUTPUT", output_folder))
OUTPUT_PATH  <- (sprintf("./Data/OUTPUT/%s", output_folder)) # path to the folder of interest
# Delete old knit files
knit_cache <- './Experiments/OCR+ECAR-Pipeline_cache'
knit_files <- sprintf("Data/OUTPUT/%s/OCR+ECAR-Pipeline_files",output_folder)
knit_folders <- c(knit_cache, knit_files)
for (folder in knit_folders) {
if (file.exists(folder))
unlink(folder, recursive = T)
}
# Read The the separate xlsx files from folder, Specify entire path to folder.
data <- read_xlsx_set(INPUT_PATH, ".xlsx")
dm <- data$rates
# source the functions used in analysis
# here::i_am("Experiments/OCR+ECAR-Pipeline.Rmd")
source("./R/src/analysis_source_functions.R")
# Read The the separate xlsx files from folder, Specify entire path to folder.
data <- read_xlsx_set(INPUT_PATH, ".xlsx")
dm <- data$rates
data$Hg_list %>%
kable(caption="Wells removed. Out od 140-160 mmHg interval") %>%
kable_styling()
data$OCR_background %>%
kable(caption="Background measurements not included in OCR correction") %>%
kable_styling()
data$ECAR_background %>%
kable(caption="Background measurements not included in ECAR correction") %>%
kable_styling()
# perep for OCR interval 5 not used
d_OCR  <- dm %>% filter(Interval != "Int5")
# filter out samples with any of intervals having less than 8 measurements
sumar <- d_OCR %>%
group_by(sample_id, Interval) %>%
summarise(n = n()) %>%
filter(n < 18) # les then 18 so it corespods to at least 6 different wells
# number of intervals has to be 4 or discarted
inter <- d_OCR %>%
group_by(sample_id) %>%
summarise(n_inter = length(unique(Interval))) %>%
filter(n_inter != 4)
d_OCR <- d_OCR %>%
filter(! sample_id %in% unique(sumar$sample_id))
d_OCR <- d_OCR %>%
filter(! sample_id %in% unique(inter$sample_id))
paste0("Samples removed due lack of usable measurements(less than 8  in any interval)")
unique(sumar$sample_id)
paste0("Samples removed because there are no 4 intervals )")
unique(inter$sample_id)
# Check if all packages are installed and install the missing ones
source('./R/src/config_file.R')
# Load packages
library(tools)
library(reshape2)
library(reshape)
library(tidyverse)
library(readxl)     # Read xlsx file
library(here)       # Used to set the path to the package dir. on the mashine
library(knitr)      # Used for tables
library(kableExtra)
library(shiny)
# Get input folder from parameters
input_folder <- params$input_folder
# Create new output folder
output_folder <- sprintf("%s_OUTPUT", input_folder)
o_path <- sprintf("./Data/OUTPUT/%s", output_folder)
if(!dir.exists(o_path)){
dir.create(path = o_path)
}
# source the functions used in analysis
# here::i_am("Experiments/OCR+ECAR-Pipeline.Rmd")
source("./R/src/analysis_source_functions.R")
# INPUT_PATH  <- (here('/Data/INPUT/ConBIS')) # path to the folder of interest
INPUT_PATH  <- (sprintf("./Data/INPUT/%s", input_folder)) # path to the folder of interest
# OUTPUT_PATH <- (here('/Data/OUTPUT/HF'))
# OUTPUT_PATH <- (here('Data', "OUTPUT", output_folder))
OUTPUT_PATH  <- (sprintf("./Data/OUTPUT/%s", output_folder)) # path to the folder of interest
# Delete old knit files
knit_cache <- './Experiments/OCR+ECAR-Pipeline_cache'
knit_files <- sprintf("Data/OUTPUT/%s/OCR+ECAR-Pipeline_files",output_folder)
knit_folders <- c(knit_cache, knit_files)
for (folder in knit_folders) {
if (file.exists(folder))
unlink(folder, recursive = T)
}
rmarkdown::render("./Experiments/OCR+ECAR-Pipeline.Rmd", output_dir = OUTPUT_PATH)
# Check if all packages are installed and install the missing ones
source('./R/src/config_file.R')
# Load packages
library(tools)
library(reshape2)
library(reshape)
library(tidyverse)
library(readxl)     # Read xlsx file
library(here)       # Used to set the path to the package dir. on the mashine
library(knitr)      # Used for tables
library(kableExtra)
library(shiny)
# Get input folder from parameters
input_folder <- params$input_folder
# Create new output folder
output_folder <- sprintf("%s_OUTPUT", input_folder)
o_path <- sprintf("./Data/OUTPUT/%s", output_folder)
if(!dir.exists(o_path)){
dir.create(path = o_path)
}
# source the functions used in analysis
# here::i_am("Experiments/OCR+ECAR-Pipeline.Rmd")
source("./R/src/analysis_source_functions.R")
# INPUT_PATH  <- (here('/Data/INPUT/ConBIS')) # path to the folder of interest
INPUT_PATH  <- (sprintf("./Data/INPUT/%s", input_folder)) # path to the folder of interest
# OUTPUT_PATH <- (here('/Data/OUTPUT/HF'))
# OUTPUT_PATH <- (here('Data', "OUTPUT", output_folder))
OUTPUT_PATH  <- (sprintf("./Data/OUTPUT/%s", output_folder)) # path to the folder of interest
# Delete old knit files
knit_cache <- './Experiments/OCR+ECAR-Pipeline_cache'
knit_files <- sprintf("Data/OUTPUT/%s/OCR+ECAR-Pipeline_files",output_folder)
knit_folders <- c(knit_cache, knit_files)
for (folder in knit_folders) {
if (file.exists(folder))
unlink(folder, recursive = T)
}
rmarkdown::render("./Experiments/OCR+ECAR-Pipeline.Rmd", output_dir = OUTPUT_PATH)
# Check if all packages are installed and loaded
source('./R/src/config_file.R')
here::i_am("Experiments/OCR+ECAR-Pipeline.Rmd")
library(tools)
library(reshape2)
library(reshape)
library(tidyverse)
library(readxl)     # Read xlsx file
library(here)       # Used to set the path to the package dir. on the mashine
library(knitr)      # Used for tables
library(kableExtra)
library(shiny)
# Get input folder
input_folder <- params$input_folder
# Create output folder
output_folder <- sprintf("%s_OUTPUT", input_folder)
o_path <- sprintf("./Data/OUTPUT/%s", output_folder)
if(!dir.exists(o_path)){
dir.create(path = o_path)
}
# source the functions used in analysis
source(here("R", "src", "analysis_source_functions.R"))
# INPUT_PATH  <- (here('/Data/INPUT/ConBIS')) # path to the folder of interest
INPUT_PATH  <- (here('Data', "INPUT", input_folder)) # path to the folder of interest
# OUTPUT_PATH <- (here('/Data/OUTPUT/HF'))
OUTPUT_PATH <- (here('Data', "OUTPUT", output_folder))
# Delete old knit files
knit_cache <- here('Experiments', "OCR+ECAR-Pipeline_cache")
knit_files <- here("Data", "OUTPUT", output_folder, "OCR+ECAR-Pipeline_files")
knit_folders <- c(knit_cache, knit_files)
for (folder in knit_folders) {
if (file.exists(folder))
unlink(folder, recursive = T)
}
rmarkdown::render("./Experiments/OCR+ECAR-Pipeline.Rmd", output_dir = OUTPUT_PATH)
# Check if all packages are installed and loaded
source('./R/src/config_file.R')
here::i_am("Experiments/OCR+ECAR-Pipeline.Rmd")
library(tools)
library(reshape2)
library(reshape)
library(tidyverse)
library(readxl)     # Read xlsx file
library(here)       # Used to set the path to the package dir. on the mashine
library(knitr)      # Used for tables
library(kableExtra)
library(shiny)
# Get input folder
input_folder <- params$input_folder
# Create output folder
output_folder <- sprintf("%s_OUTPUT", input_folder)
o_path <- sprintf("./Data/OUTPUT/%s", output_folder)
if(!dir.exists(o_path)){
dir.create(path = o_path)
}
# source the functions used in analysis
source(here("R", "src", "analysis_source_functions.R"))
# INPUT_PATH  <- (here('/Data/INPUT/ConBIS')) # path to the folder of interest
INPUT_PATH  <- (here('Data', "INPUT", input_folder)) # path to the folder of interest
# OUTPUT_PATH <- (here('/Data/OUTPUT/HF'))
OUTPUT_PATH <- (here('Data', "OUTPUT", output_folder))
# Delete old knit files
knit_cache <- here('Experiments', "OCR+ECAR-Pipeline_cache")
knit_files <- here("Data", "OUTPUT", output_folder, "OCR+ECAR-Pipeline_files")
knit_folders <- c(knit_cache, knit_files)
for (folder in knit_folders) {
if (file.exists(folder))
unlink(folder, recursive = T)
}
rmarkdown::render("./Experiments/OCR+ECAR-Pipeline.Rmd", output_dir = OUTPUT_PATH)
# Check if all packages are installed and loaded
source('./R/src/config_file.R')
here::i_am("Experiments/OCR+ECAR-Pipeline.Rmd")
library(tools)
library(reshape2)
library(reshape)
library(tidyverse)
library(readxl)     # Read xlsx file
library(here)       # Used to set the path to the package dir. on the mashine
library(knitr)      # Used for tables
library(kableExtra)
library(shiny)
# Get input folder
input_folder <- params$input_folder
# Create output folder
output_folder <- sprintf("%s_OUTPUT", input_folder)
o_path <- sprintf("./Data/OUTPUT/%s", output_folder)
if(!dir.exists(o_path)){
dir.create(path = o_path)
}
# source the functions used in analysis
source(here("R", "src", "analysis_source_functions.R"))
# INPUT_PATH  <- (here('/Data/INPUT/ConBIS')) # path to the folder of interest
INPUT_PATH  <- (here('Data', "INPUT", input_folder)) # path to the folder of interest
# OUTPUT_PATH <- (here('/Data/OUTPUT/HF'))
OUTPUT_PATH <- (here('Data', "OUTPUT", output_folder))
# Delete old knit files
knit_cache <- here('Experiments', "OCR+ECAR-Pipeline_cache")
knit_files <- here("Data", "OUTPUT", output_folder, "OCR+ECAR-Pipeline_files")
knit_folders <- c(knit_cache, knit_files)
for (folder in knit_folders) {
if (file.exists(folder))
unlink(folder, recursive = T)
}
rmarkdown::render("./Experiments/OCR+ECAR-Pipeline.Rmd", output_dir = OUTPUT_PATH)
# Check if all packages are installed and loaded
source('./R/src/config_file.R')
here::i_am("Experiments/OCR+ECAR-Pipeline.Rmd")
library(tools)
library(reshape2)
library(reshape)
library(tidyverse)
library(readxl)     # Read xlsx file
library(here)       # Used to set the path to the package dir. on the mashine
library(knitr)      # Used for tables
library(kableExtra)
library(shiny)
# Get input folder
input_folder <- params$input_folder
# Create output folder
output_folder <- sprintf("%s_OUTPUT", input_folder)
o_path <- sprintf("./Data/OUTPUT/%s", output_folder)
if(!dir.exists(o_path)){
dir.create(path = o_path)
}
# source the functions used in analysis
source(here("R", "src", "analysis_source_functions.R"))
# INPUT_PATH  <- (here('/Data/INPUT/ConBIS')) # path to the folder of interest
INPUT_PATH  <- (here('Data', "INPUT", input_folder)) # path to the folder of interest
# OUTPUT_PATH <- (here('/Data/OUTPUT/HF'))
OUTPUT_PATH <- (here('Data', "OUTPUT", output_folder))
# Delete old knit files
knit_cache <- here('Experiments', "OCR+ECAR-Pipeline_cache")
knit_files <- here("Data", "OUTPUT", output_folder, "OCR+ECAR-Pipeline_files")
knit_folders <- c(knit_cache, knit_files)
for (folder in knit_folders) {
if (file.exists(folder))
unlink(folder, recursive = T)
}
rmarkdown::render("./Experiments/OCR+ECAR-Pipeline.Rmd", output_dir = OUTPUT_PATH)
# Check if all packages are installed and loaded
source('./R/src/config_file.R')
here::i_am("Experiments/OCR+ECAR-Pipeline.Rmd")
library(tools)
library(reshape2)
library(reshape)
library(tidyverse)
library(readxl)     # Read xlsx file
library(here)       # Used to set the path to the package dir. on the mashine
library(knitr)      # Used for tables
library(kableExtra)
library(shiny)
# Get input folder
input_folder <- params$input_folder
# Create output folder
output_folder <- sprintf("%s_OUTPUT", input_folder)
o_path <- sprintf("./Data/OUTPUT/%s", output_folder)
if(!dir.exists(o_path)){
dir.create(path = o_path)
}
# source the functions used in analysis
source(here("R", "src", "analysis_source_functions.R"))
# INPUT_PATH  <- (here('/Data/INPUT/ConBIS')) # path to the folder of interest
INPUT_PATH  <- (here('Data', "INPUT", input_folder)) # path to the folder of interest
# OUTPUT_PATH <- (here('/Data/OUTPUT/HF'))
OUTPUT_PATH <- (here('Data', "OUTPUT", output_folder))
# Delete old knit files
knit_cache <- here('Experiments', "OCR+ECAR-Pipeline_cache")
knit_files <- here("Data", "OUTPUT", output_folder, "OCR+ECAR-Pipeline_files")
knit_folders <- c(knit_cache, knit_files)
for (folder in knit_folders) {
if (file.exists(folder))
unlink(folder, recursive = T)
}
rmarkdown::render("./Experiments/OCR+ECAR-Pipeline.Rmd", output_dir = OUTPUT_PATH)
# Check if all packages are installed and loaded
source('./R/src/config_file.R')
here::i_am("Experiments/OCR+ECAR-Pipeline.Rmd")
library(tools)
library(reshape2)
library(reshape)
library(tidyverse)
library(readxl)     # Read xlsx file
library(here)       # Used to set the path to the package dir. on the mashine
library(knitr)      # Used for tables
library(kableExtra)
library(shiny)
# Get input folder
input_folder <- params$input_folder
# Create output folder
output_folder <- sprintf("%s_OUTPUT", input_folder)
o_path <- sprintf("./Data/OUTPUT/%s", output_folder)
if(!dir.exists(o_path)){
dir.create(path = o_path)
}
# source the functions used in analysis
source(here("R", "src", "analysis_source_functions.R"))
# INPUT_PATH  <- (here('/Data/INPUT/ConBIS')) # path to the folder of interest
INPUT_PATH  <- (here('Data', "INPUT", input_folder)) # path to the folder of interest
# OUTPUT_PATH <- (here('/Data/OUTPUT/HF'))
OUTPUT_PATH <- (here('Data', "OUTPUT", output_folder))
# Delete old knit files
knit_cache <- here('Experiments', "OCR+ECAR-Pipeline_cache")
knit_files <- here("Data", "OUTPUT", output_folder, "OCR+ECAR-Pipeline_files")
knit_folders <- c(knit_cache, knit_files)
for (folder in knit_folders) {
if (file.exists(folder))
unlink(folder, recursive = T)
}
rmarkdown::render("./Experiments/OCR+ECAR-Pipeline.Rmd", output_dir = OUTPUT_PATH)
getwd()
# Check if all packages are installed and loaded
source('./R/src/config_file.R')
here::i_am("Experiments/OCR+ECAR-Pipeline.Rmd")
library(tools)
library(reshape2)
library(reshape)
library(tidyverse)
library(readxl)     # Read xlsx file
library(here)       # Used to set the path to the package dir. on the mashine
library(knitr)      # Used for tables
library(kableExtra)
library(shiny)
# Get input folder
input_folder <- params$input_folder
# Create output folder
output_folder <- sprintf("%s_OUTPUT", input_folder)
o_path <- sprintf("./Data/OUTPUT/%s", output_folder)
if(!dir.exists(o_path)){
dir.create(path = o_path)
}
# source the functions used in analysis
source(here("R", "src", "analysis_source_functions.R"))
# INPUT_PATH  <- (here('/Data/INPUT/ConBIS')) # path to the folder of interest
INPUT_PATH  <- (here('Data', "INPUT", input_folder)) # path to the folder of interest
# OUTPUT_PATH <- (here('/Data/OUTPUT/HF'))
OUTPUT_PATH <- (here('Data', "OUTPUT", output_folder))
# Delete old knit files
knit_cache <- here('Experiments', "OCR+ECAR-Pipeline_cache")
knit_files <- here("Data", "OUTPUT", output_folder, "OCR+ECAR-Pipeline_files")
knit_folders <- c(knit_cache, knit_files)
for (folder in knit_folders) {
if (file.exists(folder))
unlink(folder, recursive = T)
}
rmarkdown::render("./Experiments/OCR+ECAR-Pipeline.Rmd", output_dir = OUTPUT_PATH)
